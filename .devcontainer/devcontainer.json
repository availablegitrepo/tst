// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-dockerfile
// if build fails: docker pull docker.io/docker/dockerfile:1.4
{
	"name": "bitSense",
	// "build": {
	// 	// Sets the run context to one level up instead of the .devcontainer folder.
	// 	"context": "..",
	// 	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	// 	"dockerfile": "../Dockerfile"
	// }
	"image": "statistician/bitsense-slim:latest",

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "ln -s /root/venvs/cry /workspaces/bitsense/.venv; rm -rfd /root/code/bytesense/bitsense; ln -s /workspaces/bitsense /root/code/bytesense/bitsense; ln -s /root/venvs/cry /workspaces/bitsense/.venv; rm -rfd /root/code/bytesense/bitsense; ln -s /workspaces/bitsense /root/code/bytesense/bitsense; ln -s /root/venvs/cry /workspaces/bitsense/.venv; rm -rfd /root/code/bytesense/bitsense; ln -s /workspaces/bitsense /root/code/bytesense/bitsense",

	// Configure tool-specific properties.
	// "customizations": {},
	"customizations": {
		"vscode": {
			"extensions": [
				"GitHub.copilot",
				"GitHub.copilot-chat",
				"ms-toolsai.jupyter",
				"ms-toolsai.vscode-jupyter-cell-tags",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.jupyter-renderers",
				"ms-toolsai.vscode-jupyter-slideshow",
				"ms-python.mypy-type-checker",
				"zhuangtongfa.material-theme",
				"ms-python.vscode-pylance",
				"ms-python.pylint",
				"ms-python.python",
				"ms-python.debugpy",
				"charliermarsh.ruff",
				"ahmadawais.shades-of-purple",
				"alexcvzz.vscode-sqlite",
				"qwtel.sqlite-viewer",
				"ms-vscode.vscode-speech",
				"ms-vscode-remote.remote-containers",
				"ms-azuretools.vscode-docker",
				"ms-vscode.remote-server",
				"ms-vscode.remote-explorer",
				"ms-vscode-remote.vscode-remote-extensionpack"
			],
			"settings": {
				"python.pythonPath": "/root/venvs/cry/python",
				"python.defaultInterpreterPath": "/root/venvs/cry/python",
				"python.analysis.typeCheckingMode": "strict",
				"python.analysis.inlayHints.variableTypes": true,
				"python.analysis.inlayHints.functionReturnTypes": true,
				"python.analysis.inlayHints.callArgumentNames": "all",
				"pylint.args": [
					"--disable=C0301,C0321,C1802,C0116,C0103,W1309,C0415,C0115,C2801,C0123,C0411,W0640,W0718,W1203,W1201,W0105,W0107,W0511,W0221"
				],
				"git.openRepositoryInParentFolders": "never",
				"github.copilot.enable": {
					"*": true,
					"plaintext": true,
					"markdown": true,
					"scminput": false,
					"dockerfile": true
				},
				"terminal.integrated.tabs.defaultColor": "terminal.ansiBlack",
				// "flake8.args": [
				//     "--ignore=E501,E221,E701,E702,F541,F841,E704,E302,E301,E126,E127,E116,E306"
				// ],
				"python.terminal.launchArgs": [
					"-i",
					"-m", "IPython"
					// "-c", "from IPython import start_ipython; start_ipython()"
			
				],
				"launch": {
			
					"configurations": [
						{
							"name": "ipy",
							"type": "debugpy",
							"request": "launch",
							"program": "${file}",
							"console": "integratedTerminal",
							"env": {},
							"args": ["-c", "from IPython import start_ipython; start_ipython()"],
							"cwd": "${fileDirname}"
			
						}
					],
					"compounds": []
				},
				"notebook.output.textLineLimit": 100,
				"python.analysis.diagnosticMode": "workspace",
				"python.analysis.diagnosticSeverityOverrides": {
					"reportUnknownMemberType": "none",
					"reportUnknownVariableType": "none",
					"reportUnknownArgumentType": "none",
					"reportUnknownParameterType": "none",
					"reportMissingTypeStubs": "none",
					"reportUnknownLambdaType": "none",
					"reportIncompatibleMethodOverride": "none"
			
				},
				"python.analysis.packageIndexDepths": [
			
					{
						"name": "sklearn",
						"depth": 2
					},
					{
						"name": "matplotlib",
						"depth": 2
					},
					{
						"name": "scipy",
						"depth": 2
					},
					{
						"name": "django",
						"depth": 2
					},
					{
						"name": "flask",
						"depth": 2
					},
					{
						"name": "fastapi",
						"depth": 2
					}
				],
				"python.analysis.fixAll": [
					
				],
			
				"workbench.colorCustomizations": {
					"editor.background": "#000000",
					"editorPane.background": "#0d0d0d",
					"menu.background": "#000cb5",
					"tab.activeBackground": "#1500ff",
					"sideBar.background": "#000000",
					"banner.background": "#ff0000",
					"panel.background": "#000000",
					"statusBar.background": "#000000",
					"badge.background": "#5d5d5d",
					"terminalCommandDecoration.defaultBackground": "#ff0000",
					"terminal.dropBackground": "#ff00003a",
					"terminal.background":"#000000",
					"terminal.foreground":"#ffffff",
					"terminal.inactiveSelectionBackground": "#ff0000",
					"terminalCursor.background":"#000000",
					"terminalCursor.foreground":"#A5A2A2",
					"terminal.ansiBlack":"#000000",
					"terminal.ansiBlue":"#01A0E4",
					"terminal.ansiBrightBlack":"#000000",
					"terminal.ansiBrightBlue":"#01A0E4",
					"terminal.ansiBrightCyan":"#B5E4F4",
					"terminal.ansiBrightGreen":"#01A252",
					"terminal.ansiBrightMagenta":"#A16A94",
					"terminal.ansiBrightRed":"#DB2D20",
					"terminal.ansiBrightWhite":"#F7F7F7",
					"terminal.ansiBrightYellow":"#FDED02",
					"terminal.ansiCyan":"#B5E4F4",
					"terminal.ansiGreen":"#01A252",
					"terminal.ansiMagenta":"#A16A94",
					"terminal.ansiRed":"#DB2D20",
					"terminal.ansiWhite":"#A5A2A2",
					"terminal.ansiYellow":"#FDED02"
				},
				"python.analysis.logLevel": "Warning",
				"python.analysis.autoFormatStrings": true,
				"workbench.editor.tabSizingFixedMaxWidth": 38,
				"workbench.editor.tabSizingFixedMinWidth": 38,
				"workbench.startupEditor": "none",
				"extensions.ignoreRecommendations": true,
			
				"editor.scrollbar.verticalScrollbarSize": 3,
				"editor.scrollbar.horizontalScrollbarSize": 3,
				"workbench.editor.pinnedTabSizing": "shrink",
				"debug.console.fontSize": 17,
				"scm.inputFontSize": 11,
				"debug.console.acceptSuggestionOnEnter": "on",
				"debug.console.wordWrap": false,
				"github.copilot.advanced": {
				
				},
				"git.enableSmartCommit": true,
				"git.confirmSync": false,
				"zenMode.centerLayout": false,
				"editor.minimap.enabled": false,
				"terminal.integrated.defaultLocation": "editor",
				"terminal.integrated.rightClickBehavior": "paste",
				"powershell.integratedConsole.startLocation": "Editor",
				"python.terminal.activateEnvironment": false,
				"python.terminal.activateEnvInCurrentTerminal": true,
				"terminal.integrated.enableImages": true,
				"terminal.integrated.gpuAcceleration": "on",
				"terminal.integrated.copyOnSelection": true,
				"terminal.integrated.enableMultiLinePasteWarning": "auto",
				"powershell.integratedConsole.forceClearScrollbackBuffer": true,
				"editor.cursorStyle": "block",
				"window.density.editorTabHeight": "compact",
				"zenMode.showTabs": "none",
				"sqliteViewer.maxFileSize": 4000,
				"ruff.trace.server": "verbose",
				"jupyter.askForKernelRestart": false,
				"mssql.enableQueryHistoryCapture": false,
				"terminal.integrated.shellIntegration.decorationsEnabled": "never",
				"terminal.integrated.commandsToSkipShell": [
					"github.copilot.terminal.suggestCommand",
					"workbench.action.quickOpenNavigateNextInEditorPicker",
					"workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
					"workbench.action.togglePanel",
					"workbench.action.quickOpenNavigateNextInFilePicker",
					"-workbench.action.quickOpen"
				],
			
				"powershell.promptToUpdatePowerShell": false,
				"python.analysis.extraPaths": [],
				"remote.autoForwardPortsSource": "hybrid",
				"editor.glyphMargin": false,
				"scm.diffDecorationsGutterWidth": 1,
				"editor.cursorWidth": 1,
				"github.copilot.chat.welcomeMessage": "never",
				"editor.renderWhitespace": "none",
				"editor.showFoldingControls": "never",
				"editor.inlayHints.fontSize": 1,
				"editor.inlayHints.padding": true,
				"editor.inlayHints.fontFamily": "monospace",
				"markdown.marp.html": "all",
				"markdown.marp.pdf.noteAnnotations": true,
				"mssql.objectExplorer.groupBySchema": false,
				"editor.stickyScroll.enabled": false,
				"breadcrumbs.enabled": false,
				"terminal.integrated.fontFamily": "'CaskaydiaCove Nerd Font'",
				"github.copilot.chat.terminalChatLocation": "terminal",
				"github.copilot.chat.scopeSelection": true,
				"github.copilot.chat.localeOverride": "en",
				"workbench.colorTheme": "Shades of Purple (Super Dark)",
				"editor.fontFamily": "'mono space'",
				"python.analysis.inlayHints.pytestParameters": true,
				"workbench.layoutControl.enabled": false,
				"window.commandCenter": false,
				"terminal.integrated.fontWeight": "2",
				"terminal.integrated.fontWeightBold": "15",
				"editor.fontWeight": "2"
			}
		}
	},


	"mounts": [
		// "source=/root/code/bytesense/bitsense,target=${localEnv:HOME}/devcontainer/bitsense,type=bind,consistency=cached"
		// "source=/home/alex/data,target=/root/data,type=bind,consistency=cached",
		// "target=/root/.vscode-server,type=volume"
		"source=${localEnv:HOME}/data/currency,target=/root/data/currency,type=bind,consistency=cached",
		"source=${localEnv:HOME}/data/local,target=/root/data/local,type=bind,consistency=cached",
		"source=${localEnv:HOME}/dotfiles,target=/root/dotfiles,type=bind,consistency=cached",
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
		 // for docker in docker (e.g. redis and postgres)
	],
	"features": {
		"ghcr.io/devcontainers/features/sshd:1": {
			"version": "latest"
		}
	},

	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"
	// changing this complicates the process: https://code.visualstudio.com/remote/advancedcontainers/add-nonroot-user
	"remoteUser": "root",

	"runArgs": [
		"--cap-add=SYS_ADMIN",
		"--device=/dev/fuse",
		"--privileged"
	]
}
